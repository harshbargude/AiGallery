spring.application.name=smartcontactmanager
server.port=8081

# # MySQL database configurations
# spring.datasource.url=jdbc:mysql://localhost:3306/scm
# spring.datasource.username=root
# spring.datasource.password=1753iBtQNOVEM2004
# DATASOURCE_URL=jdbc:postgresql://ep-young-credit-a9h0y7z0.gwc.azure.neon.tech/neondb?sslmode=require
# DATASOURCE_USERNAME=neondb_owner
# DATASOURCE_PASSWORD=ZBqROxSd9Ci7
# spring.datasource.url=jdbc:postgresql://ep-young-credit-a9h0y7z0.gwc.azure.neon.tech/neondb?sslmode=require
# spring.datasource.username=neondb_owner
# spring.datasource.password=ZBqROxSd9Ci7
spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
# spring.profiles.active=local


# JPA configurations
# spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
# spring.jpa.hibernate.format_sql=true

# OAuth2 configurations for Google
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile

# Cloudinary configurations
# Cloudinary Configuration
cloudinary.cloud.name=${CLOUDINARY_NAME}
cloudinary.cloud.api.key=${CLOUDINARY_API_KEY}
cloudinary.cloud.api.secret=${CLOUDINARY_API_SECRET}
